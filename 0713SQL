SQL语句分类
DDL(Data Definition Language):数据定义语言，用来定义数据库对象；库，表，列等；
    >创建、删除、修改：库、表结构。
DML(Data Manipulation Language):数据操作语言，用来定义数据库记录（数据）；
    >增、删、改：表记录。
DCL(Data Control Language):数据控制语言，用来定义访问权限和安全级别；

DQL(Data Query Language):数据查询语言，用来查询记录(数据)。

DDL：数据库或表的结构操作
DML：对表的记录进行更新(增、删、改)
DQL：对表的记录的查询
DCL：对用户的创建、及授权


查看所有数据库：SHOW DATABASES;
切换数据库：USE 数据库名称
创建数据库：CREATE DATABASE (IF NOT EXISTS) mydb1 CHARSET=utf8
删除数据库：DROP DATABASE (IF NOT EXISTS)   mydb1
修改数据库编码：ALTER DATABASE mydb1 CHARACTER SET utf8

数据类型
int类型：整形
double:浮点型；例如double(5,2)表示最多5位，其中必须有两位小数，即最大数为999.99;
decimal:浮点型；在表单钱方面使用该类型，因为不会出现精度缺失问题；
char:固定长度字符串类型；char(255);数据长度不足指定长度，会补足到用户长度；
varchar:可变长度字符串类型；varchar(65535),zhangsan 
text(clob):字符串类型；(mysql/sqlserver方言)
    >tinytext       2^8-1
    >text           2^16-1
    >mediumtext     2^24-1
    >longtext       2^32-1
blob:字节类型；
    >tinyblob       2^8-1   (256B)
    >blob           2^16-1  (64K)
    >mediumblob     2^24-1  (16M)
    >longblob       2^32-1  (4G)
data:日期类型：格式为：yyyy-MM-dd
time:时间类型：格式为：hh:mm:ss
timestamp:时间戳类型；

表
创建表
    >CREATE TABLE 表名称(
        列名    列类型，
        列名    列类型，
        ...
    );
删除表：DROP TABLE 表名称
查询表结构：DESC 表名称
修改表：前缀：ALTER TABLE 表名
    >添加列：
        >ALTER TABLE 表名 ADD(
            列名    列类型，
            列名    列类型，
            ...
        );
    >修改列类型：
        >ALTER TABLE 表名 MODIFY 列名 列新的类型；
    >删除列：
        >ALTER TABLE 表名 DROP 列名；
    >修改表名称
        >ALTER TABLE 表名 RENAME TO 新名称
    >修改列名
        >ALTER TABLE 表名 RENAME COLUMN 列名 TO 新列名
    
DQL:SELECT * FROM 表名

DCL     //在数据库中所有的字符串类型，必须使用单引号，不能使用双引号；日期类型也要使用单引号；
    插入数据：
        >INSERT INTO 表名(
            列名1，列名2，列名3，列名4
        )
        VALUES(
            '001','zhangsan','28','male'
        )

        >INSERT INTO 表名(       //插入部分列，没有插入的列，为默认值NULL
            列名1，列名2
        )VALUES(
            '001','zhangsan'
        );

        >INSERT INTO 表名 VALUES(       //补给出插入列，默认为插入所有列，值的顺序要与创建表时列的顺序相同
            '001','zhangsan',29,'male'
        );

修改表数据：
    update 表名 set 列名=值 where 列名='值';
    多个条件之间用and 和 or 连接
    =null和is null不同

删除表
    delete from 表名 where name='zhangsan';

一个项目创建一个用户；一个项目对应的数据库只有一个
这个用户只对这个数据库有权限，无法操作其他数据库

创建用户：
    CREATE USER 用户名@IP地址 IDENTIFIED BY '密码';
    用户只能在指定的IP地址上登陆
    CREATE USER 用户名@'%' IDENTIFIED BY '密码';
    用户可以在任意IP地址上登陆

给用户授权
    GRANT 权限1，权限n on 数据库.* to 用户名@IP地址
    权限：create alter drop insert update delete select 

撤销用户授权
    REVOKE 权限1，权限n ON 数据库.* FROM 用户名@IP地址
    撤销删除权限:
        REVOKE DELETE ON CHENDB.* FROM chen@localhost

查看权限
    SHOW GRANTS FOR 用户名@IP地址

删除用户
    DORP USER 用户名@IP地址

查询
    SELECT * FROM 表名  //*表示查询所有，可以用列名代替
    SELECT name FROM tb_stu     //查询name列

查询结果去除完全重复行(并不删除表)
    SELECT DISTINCT 列名 FROM 表名

列运算
    SELECT *,age+10 from tb_stu;
    SELECT *,age+ifnull(aget,0) from tb_stu;
    !!mysql中不能用+连接字符串，需要用concat函数
    SELECT CONCAT('sss,','qqq') as all from 表名    //as可以省略，

模糊查询
    like'张_'       //下划线代替一个字符
    like'张%'       //%代替0~N个字符
    like'%张%'      //查询所有带张字的字段

排序
    SELECT * FROM 表名 ORDER BY 列名 ASC   //升序排列
    SELECT * FROM 表名 ORDER BY 列名 DESC   //降序
    多列配许
    SELECT * FROM 表名 ORDER BY 列名 ASC,列名 DESC,列名ASC;

聚合函数
    COUNT   //合计
        SELECT COUNT(列名) FROM 表名;   //合计所有不为NULL的字段数目*代表所有字段都为NULL才补计数，
    SUM     //求和
        SELECT SUM(列名) FROM 表名;
    MAX     //求最大值
        SELECT MAX(列名) FROM 表名;
    MIN     //求最小值
        SELECT MIN(列名) FROM 表名;
    AVG     //平均值
        SELECT AVG(列名) FROM 表名;

分组查询        //分组查询不能带个人信息
    SELECT 列名 FROM 表名 GROUP BY 列名；
    SELECT 列名 FROM 表名 WHERE AGE>20 GROUP BY 列名 HAVING COUNT(*)>2; //分组后只能用聚合函数做条件

关键字顺序
    SELECT
    FROM
    WHERE
    GROUP BY
    HAVING
    ORDER BY

LIMIT子句（SQL方言）
    LIMIT用来限定查询结果的起始行以及总行数；
    SELECT * FROM 表名 LIMIT 0,2;   //其中0表示从第1行开始，2表示一共查询2行；
    分页查询
        SELECT * FROM 表名 LIMIT 20,10;     //查询第三呀(当前页-1)*每页记录数

编码        //查看编码SELECT VARIABLES LIKE 'CHAR%';
    character_set_client    //客户端
    character_set_results   //结果

    set character_set_client=gbk;   //只对当前串口有效
    set character_set_results=gbk;







