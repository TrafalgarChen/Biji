备份与恢复
    数据库导出SQL脚本(备份数据库内容，并不是备份数据库数据)
    mysqldump -u用户名 -密码 数据库名>路径/名称
    mysqldump -uroot -p123 chendb>d:/a.sql
        恢复数据库前需要在MYSQL中创建同名称的数据库
        mysql -uroot -p 数据库名<路径/名称
        mysql -uroot -p chendb<d:/a.sql

        登陆MYSQL
        source 脚本路径
        source d:\a.sql

约束
    1.主键约束(唯一标识)
    非空
    唯一
    被引用
    
    创建表时指定主键
        CREATE TABLE EMP(
            EMPNO INT PRIMARY KEY,
            ENAME VARCHAR(50)
        );或
        CREATE TABLE 表名(
            列名1 值类型，
            列名2 值类型，
            PRIMARY KEY(列名称)
        );
    已存在的表指定主键
        ALTER TABLE 表名 ADD PRIMARY KEY(列名)
    删除主键
        ALTER TABLE 表名 DROP PRIMARY KEY;
    
    2.主键自增长
        AUTO_INCREMENT

    3.非空约束&&唯一约束
        CREATE TABLE 表名(
            列名1 值类型 UNIQUE,        //唯一约束
            列名2 值类型 NUT NULL;      //非空约束
            );

    概念模型
        关系模型
            一对一
            一对多
            多对多
        对象模型

    

    外键约束
        外建必须是另一张表的主键（外键要引用主键）
        外键可以重复
        外键可以为空
        一张表中可以有多个外键
        CREATE TABLE DEPT(
            DEPTNO INIT PRIMARY KEY AUTO_INCREMENT,
            DNAME VARCHAR(20)
        )
        CREATE TABLE EMP(
	        EMPNO INT PRIMARY KEY AUTO_INCREMENT,
	        ENAME VARCHAR(20),
	        DNO INT,
	        CONSTRAINT FK_EMP_DEPT FOREIGN KEY(DNO) REFERENCES DEPT(DEPTNO)
	);或
        ALTER TABLE EMP
        ADD CONSTRAINT FK_EMP_DEPT FOREIGN KEY(DNO) REFERENCES DEPT(DEPTNO)
    
    一对一    
    CREATE TABLE HASBAND(
	HID INT PRIMARY KEY AUTO_INCREMENT,
	HNAME VARCHAR(20)
    );
    INSERT INTO HASBAND VALUES(NULL,'ZHANGSAN');
    INSERT INTO HASBAND VALUES(NULL,'LISI');
    INSERT INTO HASBAND VALUES(NULL,'WANGWU');
    CREATE TABLE WIFE(
        WID INT PRIMARY KEY AUTO_INCREMENT,
        WNAME VARCHAR(20),
        CONSTRAINT FK_WIFE_HASBAND FOREIGN KEY(WID) REFERENCES HASBAND(HID)
    );
    其中WIFE表的WID既是主键又是相对HASBAND表的外键；    //从表的主键是外键
    HASBAND.HID是主键，不能重复；
    WIFE.WID是主键，不能重复，又是外键，必须来自HASBAND.HID

    一对多
    CREATE TABLE HASBAND(
	HID INT PRIMARY KEY AUTO_INCREMENT,
	HNAME VARCHAR(20)
    );
    INSERT INTO HASBAND VALUES(NULL,'ZHANGSAN');
    INSERT INTO HASBAND VALUES(NULL,'LISI');
    INSERT INTO HASBAND VALUES(NULL,'WANGWU');
    CREATE TABLE WIFE(
        WID INT PRIMARY KEY AUTO_INCREMENT,
        WNAME VARCHAR(20),
        HID INT,
        CONSTRAINT FK_WIFE_HASBAND FOREIGN KEY(HID) REFERENCES HASBAND(HID)
    );

    多对多
    在表中建立多对多关系需要使用中间表，在中间表中使用两个外键，分别引用其他两个表的主键
    CREATE TABLE STUDENT(
	SID INT PRIMARY KEY AUTO_INCREMENT,
	SNAME VARCHAR(20)
	);
    CREATE TABLE TEACHER(
	TID INT PRIMARY KEY AUTO_INCREMENT,
	TNAME VARCHAR(20)
	);
    CREATE TABLE STU_TEA(
	SID INT,
	TID INT,
	CONSTRAINT FK_STUDENT FOREIGN KEY(SID) REFERENCES STUDENT(SID),
	CONSTRAINT FK_TEACHER FOREIGN KEY(TID) REFERENCES TEACHER(TID)
	);
    INSERT INTO STUDENT VALUES(NULL,'ZHANG3');
    INSERT INTO STUDENT VALUES(NULL,'LI4');
    INSERT INTO STUDENT VALUES(NULL,'WANG5');
    INSERT INTO STUDENT VALUES(NULL,'ZHAO6');
    INSERT INTO STUDENT VALUES(NULL,'HAN7');
    INSERT INTO TEACHER VALUES(NULL,'T1');
    INSERT INTO TEACHER VALUES(NULL,'T2');
    INSERT INTO TEACHER VALUES(NULL,'T3');
    INSERT INTO STU_TEA VALUES(1,1);
    INSERT INTO STU_TEA VALUES(2,1);
    INSERT INTO STU_TEA VALUES(3,1);
    INSERT INTO STU_TEA VALUES(4,1);
    INSERT INTO STU_TEA VALUES(5,1);
    INSERT INTO STU_TEA VALUES(1,2);
    INSERT INTO STU_TEA VALUES(2,2);
    INSERT INTO STU_TEA VALUES(3,2);
    INSERT INTO STU_TEA VALUES(1,3);
    INSERT INTO STU_TEA VALUES(3,3);
    INSERT INTO STU_TEA VALUES(5,3);
    把关系写道中间表中，中间表要有两个外键



    
        


